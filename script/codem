#!/usr/bin/env ruby

require 'optparse'

ARGV << "-h" if ARGV.empty?

options = {}

optparse = OptionParser.new do |opts|
  opts.banner = "Usage: codem [OPTIONS]"
  opts.separator ""
  
  options[:host] = 'http://127.0.0.1:3000'
  opts.on('-H', '--host [HOST]', "Host to connect to, defaults to 127.0.0.1:3000") do |h|
    options[:host] = h
  end
  
  opts.on('-i', '--input [FILE]', "Input file to convert") do |i|
    options[:input] = i
  end
  
  opts.on('-o', '--output [FILE]', "Output file to write to") do |o|
    options[:output] = o
  end
  
  opts.on('-p', '--preset [NAME]', "Preset to use") do |p|
    options[:preset] = p
  end
  
  opts.on('-n', '--notify [LIST]', "List of emails and/or urls separated by comma's to notify when the job is completed") do |n|
    options[:notify] = n
  end
  
  options[:verbose] = ''
  opts.on('-v', '--verbose', "Print curl's verbose output") do |v|
    options[:verbose] = '-i'
  end
  
  opts.on_tail('-h', '--help', 'Display this screen') do
    puts opts
    exit
  end
end

optparse.parse!

args = "input=#{options[:input]}&output=#{options[:output]}&preset=#{options[:preset]}&notify=#{options[:notify]}"
cmd  = "curl #{options[:verbose]} -d '#{args}' '#{options[:host]}/api/jobs'"

Kernel.exec(cmd)
